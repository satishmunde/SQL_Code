
DDL COMMAND :-
	DDL Stands for Data Defination langauge. DDL changes the structure of
the table like creating a table, deleting a tabel altering a table ,etc.
all the command of ddl are auto-commited that means it permanently save the 
all changes in the database

1. CREATE 
		It is used to crate a new table in the database.
Syntax FOR ONE COLUMN 
		CREATE TABLE TABLENAME(COLUMNNAME DATATYPES(SIZE);
EXAMPLE FOR ONE COLUMN
		CREATE TABLE EMP(NAME VARCHAR(10));

SYNTAX FOR MULTIPLE COLUMN
		CREATE TABLE TABLENAME(COLUMNNAME1 DATATYPE(SIZE),
		COLUMNNAME2 DATATYPE(SIZE),..................
		...................);
EXAMPLE FOR MULTIPLE COLUMN
		CREATE TABLE EMP(ID NUMBER(3),
		NAME VARCHAR(10),POST VARCHAR(10));

2. INSERT 

SYNTAX FOR INSERTING VALUES
	INSERT INTO TABLENAME VALUES(EXPRESSION1,EXPRESSION2,EXPRESSION3...);

EXAMPLE FOR INSERTING VALUES
	INSERT INTO EMP VALUES(01,'AA');

SYNTAX FOR INSERTING IN SPECIFIC COLUMN
	INSERT INTO TABLENAME(COLUMNNAME1,COLUMNNAME2)
	VALUES(EXPRESSION1,EXPRESSION2);


3. DROP 
		it is used to delete both the structure and record stored int the 
		table.

SYNTAX 
		DROP TABLE table_name; 

EXAMPLE 
		DROP TABLE EMP;  


ALTER 
		It is used to alter the structure of the database.

ADD A NEW COLUMN IN A TABLE
	
SYNTAX 
	ALTER TABLE TABLENAME 
ADD(COLUMNNAME DATATYPE(SIZE));

EXAMPLE
	ALTER TABLE EMP 
	ADD (SALARY NUMBER(5));

FOR ADDING MULTIPLE COLUMN

SYNTAX
		ALTER TABLE TABLENAME 
		ADD(COLUMNNAME1 DATATYPE(SIZE),COLUMNNAME2 DATATYPE(SIZE));

EXAMPLE
		ALTER TABLE EMP 
	ADD (SALARY NUMBER(5),CITY VARCHAR(9));

FOR MODIFICATION IN SIZE OF COLUMN

SYNTAX 
	ALTER TABLE TABLENAME
	MODIF Y(COLUMNNAME DATATYPE(SIZE));

EXAMPLE
	ALTER TABLE EMP 
	MODIFY (SALARY NUMBER(7));

FOR DROP THE STRUCTURE OF COLUMN

SYNTAX 
	ALTER TABLE TABLENAME DROP COLUMN COLUMNNAME;

EXAMPLE
	ALTER TABLE EMP DROP COLUMN SALARY;

MODIFY A COLUMN

SYNTAX
		ALTER TABLE TABLENAME MODIFY (COLUMNAME DATATYPE(SIZE);

EXAMPLE
		ALTER TABLE EMP 
		MODIFY (ID NUMBER(5));

RENAME A COLUMN
	
SYNTAX
		ALTER TABLE TABLENAME RENAME COLUMN COLUMNNAME TO CHANGEDNAME;

  EXAMPLE 
		ALTER TABLE EMP RENAME COLUMN ID TO STUDENT ID;

TO RENAME A TABLE 

SYNTAX
	ALTER TABLE TABLENAME RENAME TO CHANGEDNAME;

EXAMPLE
	ALTER TABLE EMP RENAME TO STUDENT;

	
4. TRUNCATE
		It is used to delete all the rows from the tavle and free the 
		space containing the table.

SYNTAX 
		TRUNCATE TABLE TABLENAME;
EXAMPLE
		TRUNCATE TABLE EMP;


DDL 
	This type of commands are used to modity the database.

UPDATE 
		This command is used to update or modify the value of a column in the table.

SYNTAX UPDATE ALL COLUMN
		UPDATE TABLENAME SET COLUMNNAME =EXPRESSION1 OR VALUE; 
		
 EXAMPLE 
		UPDATE TABLE SET SALARY=50000;

SYNTAX FOR CONDITIONAL UPDATE
		UPDATE TABLENAME SET COLUMNNAME =EXPRESSION1 OR VALUE
		WHERE CONDITON;

EXAMPLE 
		UPDATE TABLENAME SET SALARY=45000
		WHERE ID <=3;

			 
DELETE
		It is used to remove one or more row from a table.

SYNTAX 
		DELETE FROM TABLENAME
		WHERE CONDITION;
EXAMPLE
		DELETE FROM EMP
		WHERE NAME='SATISH';


DCL
		This commands are used to grand and take back authority from any database user.

EXAMPLE FOR CREATING USER 
		CREATE USER SATISH IDENTIFIED BY PWD;


GRANT 
		It os used to give user access privileges to a database.

SYNTAX 
	GRANT PRIVILEGESNAME ON TABLENAME TO USERNAME;

EXAMPLE
		GRANT SELECT, UPDATE ON EMP TO SATISH;


REVOKE
		IT IS USED TO TAKE BACK PERMISSIONS FROM THE USER.

SYNTAX 
		REVOKE  PRIVILEGESNAME ON TABLENAME TO USER;

EXAMPLE 
		REVOKE SELECT ON SYSTEM.EMP TO SATISH;

 
TCL
		TO STORE THE DML COMMANDS LIKE INSERT, DELETE AND UPDATE ONLY.

COMMIT
		TO SAVE THE ALL THE TRACSACTIONS TO THE DATABASE.

SYNTAX
		COMMIT;

EXAMPLE
		INSERT INTO EMP VALUES(01,'SATISH');
		COMMIT; 

ROLLBACK
		IT IS USED TO TAKE ONE STEP BACK OR UNDO TRANSACTION THAT HAVE NOT ALREADY VEEN SAVED TO THE DATABASE.

SYSTAX
		ROLLBACK;

EXAMPLE 
		INSERT INTO EMP VALUES(01,'SATISH');
		ROLLBACK;


SAVEPOINT 
		IT IS USED TO ROLL THE TRANSACTION BACK TO A CERTAIN POINT WITHOUT ROLLING BACK THE CNTIRE TRANSACTION.

SYNTAX
		SAVEPOINT SAVEPOINTNAME;

EXAMPLE
		SAVEPOINT A;

TO ACCESS THE SAVEPOINT
		ROLLBACK TO SAVEPOINT A;


---------------------------------------------------------------------------
SELECTING FROM TABLES ,WHERE CLAUSE 

	The SQL WHERE clause is used to specify a condition while fetching the data from a single table or by joining with multiple tables. 

SYNTAX 
		SELECT column1, column2, columnN 
		FROM table_name
		WHERE [condition];

EXAMPLE 
		SELECT NAME FORM EMP
		WHERE NAME='SATISH';


SELECTING HOLE TABLE
		SELECT *FROM TABLENAME;

SELECTED COLUMN AND ROWS
		SELECT COLUMNNAME FORM TABLENAME;


SELECTING FORM TABLE USING DISTINCT CLAUSE.

	The SELECT DISTINCT statement is used to return only distinct (different) values.

 It is helpful when we avoid duplicate values present in the specific columns/tables. The unique values are fetched when we use the distinct keyword.

SYNTAX
		SELECT DISTINCT expressions  
		FROM tables  
		[WHERE conditions];  
		
		
EXAMPLE 
		SELECT DISTINCT SALARY FROM EMPLOYEES  
		WHERE SALARY>=10000;

CONSTAINTS

ADD A CONSTRAINT USING  ALTER COMMAND

SYNTAX
	 ALTER TABLE TABLENAME ADD CONSTRAINT CONSTRAINTNAME CONSTRAINTTYPE (COLUMNNAME);

EXAMPLE
	ALTER TABLE EMP ADD CONSTRAINT SATISH UNIQUE (ID);

FOREIGN KEY
	
SYNTAX
		ALTER TABLE CHILDTABLENAME ADD CONSTRAINT CONSTRAINTNAME
		CONSTRAINTKEY (COLUMNNAME) REFERENCES MASTERTABLENAME (COLUMNNAME);

EXAMPLE 
		ALTER  TABLE STUDENT ADD CONSTRAINT SATISH FOREIGN KEY (STU_ID) REFEREENCES EMP (EMP_ID);

DROP A CONSTRAINT

SYNTAX
		ALTER TABLE TABLENAME DROP CONSTRAINT CONSTRAINTNAME;

EXAMPLE
		ALTER TABLE STUDENT DROP CONSTRAINT SATISH;

DEFAULT 

SYNTAX
		CREATE TABLE TABLENAME
		(COLUMNNAME DATATYPE(SIZE) DEFAULT DEFAULTVALUE);
EXAMPLE
		CREATE TABLE EMP
		(SALARY NUMBER(5) DEFAULT 50000);

USING ALTER COMMAND
SYNTAX
		ALTER TABLE TABLENAME MODIFY COLUMNNAME DEFAULT DEFAULTVALUE;

EXAMPLE
		ALTER TABLE EMP MODIFY ID DEFAULT 2;
	

NOT NULL USING ALTER COMMAD

SYNTAX
		ALTER TABLE TABLENAME MODIFY COLUMNNAME CONSTAINT;

EXAMPLE
		ALTER TABLE EMP MODIFY ID NOT NULL;

AT TABLE CREATION NOT NULL

SYNTAX
		CREATE TABLE TABLENAME
		(COLUMNNAME DATATYPE(SIZE) NOT NULL);

EXAMPLE 
		CREATE TABLE EMP
		ID NUMBER(3) NOT NULL);
CHECK 

SYNTAX
		CREATE TABLE TABLENAME
		(COLUMNNAME DATATYPE(SIZE) CHECK(COLUMNNAME IN	(VALUE1,VALUE2, VALUE3);

EXAMPLE
		CREATE TABLE EMP
		(ID NUMBER(3) CHECK(ID IN(1,2,3,4,5));

AT THE END
SYNTAX
		CREATE TABLE TABLENAME
		(COLUMNNAME1 DATATYPE(SIZE),COLUMNNAME2 DATATYPE(SIZE), CHECK(COLUMNNAME IN	(VALUE1,VALUE2, VALUE3);


EXAMPLE
		CREATE TABLE EMP
		(ID NUMBER(3),NAME VARCHAR(5), CHECK(ID IN(1,2,3,4,5));
		

UNIQUE KEY
SYNTAX 
		CREATE TABLE TABLENAME
		(COLUMNNAME DATATYPE(SIZE) UNIQUE);

EXAMPLE
		CREATE TABLE EMP
		(ID NUMBER(3) UNIQUE);

AT MULTIPLE COLUMN

	CREATE TABLE EMP
	(ID NUMBER(3),NAME VARCHAR(3),PIN NUMBER(6), UNIQUE(ID,NAME));

PRIMARY KEY

SYNTAX 
		CREATE TABLE TABLENAME
		(COLUMNNAME1 DATATYPE(SIZE) PRIMARY KEY,COLUMNNAME2 				DATATYPE(SIZE));
EXAMPLE

		CREATE TABLE EMP
		(ID NUMBER(3) PRIMARY KEY, NAME VARCHAR(9));
	
  







